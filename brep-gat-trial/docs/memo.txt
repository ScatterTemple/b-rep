# main.py
特徴量抽出コードを作成。ただし接続情報を要するところと、edge は完全に未実装。Convexity の定義が不明で放置中。でも、論文によるとフルで特徴量を実装しなくても精度がどうと論じているので、 matching に使うだけならあんまり拘らなくてもいいのかもしれない。


# main2.py

12:44 2024/06/15
- 六面体 step で面の数とエッジの数が合うことを確認。
- IndexDataMap から得たトポロジが既存の関数で得た face や edge と == で比較できることを確認
- networkx の graph を作成できることを確認

23:40 2024/06/15
- 突度（convexity）の計算：


# main3.py

0:50 2024/06/16
- curved-cuve をサンプルに追加
- extract_..._feature() を追加、ただし内容は GPT のものを未反映
- networkx の結果を可視化する機能を追加

# sub1.py
- 単純な cos に基づいて、ベクトル間の距離を求めて、それに応じて近い特徴量を対応付けるスクリプト。

# main4
- main3, sub1 の内容をざっくり統合（step1, step2 を取得し、グラフを作成し、特徴量をもとに対応付けを作成。ただし、使っている特徴量は面の normal だけ）。


# https://arxiv.org/pdf/2306.03169
b-rep matching をしっかりやっている論文。特徴量抽出のところはざっくり端折って NN を使ったマッチングアルゴリズムを詳説している。正直 NN わからんので、結局これが一番いいんだろうけど、手を出しづらいでいる。グラフ化部分が実装できたら、これも GPT に実装してもらおうか。